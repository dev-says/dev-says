name: Deploy dockerized app

on:
  pull_request:
    branches:
      - master

env:
  APP_HOST: ${{ secrets.APP_HOST }}
  API_HOST: ${{ secrets.API_HOST }}
  LE_EMAIL: ${{ secrets.LE_EMAIL }}

  PGUSER: ${{ secrets.PGUSER }}
  PGHOST: ${{ secrets.PGHOST }}
  PGPASSWORD: ${{ secrets.PGPASSWORD }}
  PGDATABASE: ${{ secrets.PGDATABASE }}
  PGPORT: ${{ secrets.PGPORT }}

  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}

  OAUTH_GITHUB_ID: ${{ secrets.OAUTH_GITHUB_ID }}
  OAUTH_GITHUB_SECRET: ${{ secrets.OAUTH_GITHUB_SECRET }}
  OAUTH_GOOGLE_ID: ${{ secrets.OAUTH_GOOGLE_ID }}
  OAUTH_GOOGLE_SECRET: ${{ secrets.OAUTH_GOOGLE_SECRET }}

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to the GitHub registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-backend-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-backend-
      -
        name: Build backend image
        uses: docker/build-push-action@v2
        with:
          context: backend
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/devsays_backend:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      -
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to the GitHub registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-frontend-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-frontend-
      -
        name: Build frontend image
        uses: docker/build-push-action@v2
        with:
          context: frontend
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/devsays_frontend:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            REACT_APP_HOST=https://${{ env.APP_HOST }}
            REACT_APP_API_HOST=https://${{ env.API_HOST }}
            REACT_APP_GOOGLE_ID=${{ env.OAUTH_GOOGLE_ID }}
            REACT_APP_GITHUB_ID=${{ env.OAUTH_GITHUB_ID }}
      -
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up checkout
        uses: actions/checkout@v2
      - 
        name: Copy docker-compose.yml to the droplet
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.DEPLOYMENT_USERNAME }}
          key: ${{ secrets.DEPLOYMENT_KEY }}
          source: docker-compose.yml,docker-compose.traefik.yml
          target: devsays
      -
        name: Prepare containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.DEPLOYMENT_USERNAME }}
          key: ${{ secrets.DEPLOYMENT_KEY }}
          envs: APP_HOST,API_HOST,LE_EMAIL,PGUSER,PGHOST,PGPASSWORD,PGDATABASE,PGPORT,JWT_SECRET,COOKIE_SECRET,OAUTH_GITHUB_ID,OAUTH_GITHUB_SECRET,OAUTH_GOOGLE_ID,OAUTH_GOOGLE_SECRET
          script: |
            export APP_HOST=$APP_HOST
            export API_HOST=$API_HOST
            export LE_EMAIL=$LE_EMAIL
            export PGUSER=$PGUSER
            export PGHOST=$PGHOST
            export PGPASSWORD=$PGPASSWORD
            export PGDATABASE=$PGDATABASE
            export PGPORT=$PGPORT
            export JWT_SECRET=$JWT_SECRET
            export COOKIE_SECRET=$COOKIE_SECRET
            export PROTOCOL=https
            export FRONTEND_DOMAIN=$APP_HOST
            export OAUTH_GITHUB_ID=$OAUTH_GITHUB_ID
            export OAUTH_GITHUB_SECRET=$OAUTH_GITHUB_SECRET
            export OAUTH_GOOGLE_ID=$OAUTH_GOOGLE_ID
            export OAUTH_GOOGLE_SECRET=$OAUTH_GOOGLE_SECRET
            cd devsays
            docker-compose -f docker-compose.traefik.yml up -d --build 
            docker-compose pull
            docker-compose up -d --build

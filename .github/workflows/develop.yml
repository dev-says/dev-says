name: Build dockerized Node.js app

on:
  pull_request:
      
env:
  DBMS_USER: ${{ secrets.DBMS_USER }}
  DBMS_PASSWORD: ${{ secrets.DBMS_PASSWORD }}
  DBMS_DB: ${{ secrets.DBMS_DB }}
  BACKEND_HOST: ${{ secrets.BACKEND_HOST }}
  BACKEND_PORT: ${{ secrets.BACKEND_PORT }}

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-backend-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-backend-
      -
        name: Build backend image
        uses: docker/build-push-action@v2
        with:
          context: backend
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      -
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-frontend-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-frontend-
      -
        name: Build frontend image
        uses: docker/build-push-action@v2
        with:
          context: frontend
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      -
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

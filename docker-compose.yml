version: '3.9'

services: 
  db:
    image: postgres:13.2-alpine
    environment: 
      POSTGRES_USER: ${DBMS_USER}
      POSTGRES_PASSWORD: ${DBMS_PASSWORD}
      POSTGRES_DB: ${DBMS_DB}
    volumes: 
      - pg_data:/var/lib/postgresql/data
    networks: 
      - internal
    restart: always

  backend:
    build: ./backend
    environment: 
      FASTIFY_ADDRESS: ${BACKEND_HOST}
      FASTIFY_PORT: ${BACKEND_PORT}
    ports: 
      - "8080:${BACKEND_PORT}"
    networks: 
      - internal
    depends_on: 
      - db
    restart: always

  frontend:
    build: ./frontend
    ports:
      - 3000:80
    labels:
      - traefik.docker.network=traefik-public
      - traefik.enable=true

      - traefik.http.services.app.loadbalancer.server.port=80

      - traefik.http.routers.app.rule=Host(`localhost`)
      - traefik.http.routers.app.entrypoints=websecure

      - traefik.http.routers.app.tls=true
      - traefik.http.routers.app.tls.certresolver=le
    networks: 
      - traefik-public
      - internal
    restart: always

volumes:
  pg_data:

networks:
  traefik-public:
    external: true
  internal:
    external: false
    